import("npm.gni")

template("typescript_build") {
  assert(defined(invoker.tsconfig),
         "Need tsconfig name to run (must exist in electron root)")
  assert(defined(invoker.sources), "Need tsc sources to run")
  assert(defined(invoker.electron_dir),
         "Need electron_dir to run, should be 'lib' or other top level dir")

  npm_action(target_name) {
    forward_variables_from(invoker,
                           [
                             "deps",
                             "public_deps",
                             "outputs",
                           ])
    script = "tsc"

    sources = invoker.sources

    args = [
      "-p",
      "tsconfig." + invoker.tsconfig + ".json",
      "--outDir",
      rebase_path("$target_gen_dir/tsc/electron/" + invoker.electron_dir),
      "--typeRoots",
      "node_modules/@types,typings," +
          rebase_path("$target_gen_dir/tsc/electron/typings"),
    ]

    outputs = []

    foreach(invoker_source, invoker.sources) {
      # The output of TSC is all inputs but with JS instead of TS as the extension
      outputs += [ "$target_gen_dir/tsc/electron/" +
                   get_path_info(invoker_source, "dir") + "/" +
                   get_path_info(invoker_source, "name") + ".js" ]
    }
  }
}
